---
title: finite state machines
tags: blog-post
date: 2025-05-08
description: in video gaming, and a bunch of their implementations.
layout: "blog_post.njk"
---

<p>
    I've been trying to learn how to make my pygame code not bad.
    <a href="https://gameprogrammingpatterns.com/"
        >https://gameprogrammingpatterns.com/</a
    >
    by Robert Nystrom is pretty nice.
</p>

<p>
    I've done some learning with that book, particularly being in the middle of
    a project using state machines. This is making me a bit annoyed with python.
</p>

<p>
    I've been wanting to learn Rust to a non-trival degree for a bit now
    (because new languages really rewire the brain). SO here are some other
    state machine stuff (in Rust) that I've poked around and found:
</p>

<ul>
    <li>
        <a href="https://crates.io/crates/moku"
            >https://crates.io/crates/moku</a
        >
    </li>
    <li>
        <a href="https://crates.io/crates/sm">https://crates.io/crates/sm</a>
    </li>
    <li>
        <a href="https://crates.io/crates/rust-fsm"
            >https://crates.io/crates/rust-fsm</a
        >
    </li>
    <li>
        psych, python:
        <a href="https://github.com/pytransitions/transitions"
            >https://github.com/pytransitions/transitions</a
        >
    </li>
</ul>

<p>
    Along with that vibe, Rust and ocaml both have bindings to raylib, a library
    for coding games. So that's cool I guess.
</p>

<p>eepy.</p>
