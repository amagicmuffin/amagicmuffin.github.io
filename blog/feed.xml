<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <title>amuffin&#39;s blog</title>
  <subtitle>various microblogs, ramblings, fun thematic gatherings of links, and other blog posts.</subtitle>
  <link href="https://amuffin.is-a.dev/blog/feed.xml" rel="self" />
  <link href="https://amuffin.is-a.dev/" />
  <updated>2025-09-02T00:00:00Z</updated>
  <id>https://amuffin.is-a.dev/</id>
  <author>
    <name>amuffin</name>
  </author>
  <entry>
    <title>python prof</title>
    <link href="https://amuffin.is-a.dev/blog/python-profiling/" />
    <updated>2025-09-02T00:00:00Z</updated>
    <id>https://amuffin.is-a.dev/blog/python-profiling/</id>
    <content type="html">
&lt;p&gt;read a blog post, and some interesting links from its hacker news post.&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;
        &lt;a href=&quot;https://ohadravid.github.io/posts/2023-03-rusty-python/&quot;&gt;https://ohadravid.github.io/posts/2023-03-rusty-python/&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
        &lt;a href=&quot;https://github.com/pyutils/line_profiler&quot;&gt;https://github.com/pyutils/line_profiler&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
        &lt;a href=&quot;https://github.com/plasma-umass/scalene&quot;&gt;https://github.com/plasma-umass/scalene&lt;/a&gt;
    &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
    also note snakeviz, which is mentioned with some frequency on the pygame
    discord.
&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>pinta feedback</title>
    <link href="https://amuffin.is-a.dev/blog/pinta-feedback/" />
    <updated>2025-09-02T00:00:00Z</updated>
    <id>https://amuffin.is-a.dev/blog/pinta-feedback/</id>
    <content type="html">
&lt;p&gt;
    Hi, I&#39;m also of the opinion that the current UI is confusing. This is with
    the caveat that the first time I was confused by such fundamental design
    motifs in user interface is probably my youth with Word 2007 and such. This
    is to say that I grew up on and am familiar with the &quot;windows-style&quot; user
    interfaces with a menu bar named File and such.
&lt;/p&gt;
&lt;p&gt;With this explained about me, here are the things I have found confusing:&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;
        what I perceive to be &quot;multiple menus&quot; in the top right. Many times I&#39;ve
        clicked through the hamburger menu thinking &quot;man, I have no idea where
        to find this thing,&quot; and then look through the docs and realize it&#39;s in
        one of the other icons, which isn&#39;t even styled like a menu-opener
        anyways! (From my windows-style point of view.)
        &lt;ul&gt;
            &lt;li&gt;
                As an interesting note, I think I would have been less confused
                if you had even put the entire menu hierarchy into the hamburger
                menu, such that expanding the hamburger menu essentially reveals
                a windows-style taskbar. Shrug.
            &lt;/li&gt;
        &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;
        &quot;multiple things&quot; in the top left. This is slightly better, I&#39;ve quickly
        learned that the top left is pretty useless to me (as a long-time
        software user, I&#39;ve memorized the common mnemonic keyboard shortcuts C
        for copy, O for open, and so on). But because of this shortcut, I&#39;ve
        only now (after reading these UI discussions) realized that these are
        meant to be frequently-used actions. Previously, when I click on the top
        left, I was scared a menu would jump out at me, and when I click on the
        top right, I was scared a menu would not jump out at me! This is
        possibly simply a fear that someone used to GTK would not have.
    &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
    Let me additionally add some of my user stories from UI I believe to be good
    (or I am at least familiar with).
&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;
        I am &quot;good at&quot; VSCode. I am worse at
        [photopea](https://www.photopea.com/). In both, I almost exclusively use
        their features via command pallets! (except the most obvious ones like
        clicking on the brush lets me use the brush, and the VSCode file
        explorer functions like my file explorer.) I am aware there&#39;s a separate
        discussion somewhere around here about that.
    &lt;/li&gt;
    &lt;li&gt;
        Observe Firefox. When I click on the extension menu, I am told it I am
        looking at extensions. This teaches me that button is for the extension
        menu. When I click on the downloads button, text says &quot;show all
        downloads.&quot; This teaches me this is something that lists downloads of
        some kind. The hamburger menu has a very well-known idiom, and for every
        other unlabeled button up there, that button teaches you what it is. I
        had no idea what the three buttons that open menus (that aren&#39;t the
        hamburger menu) are meant to show me until reading this forum, when I
        realized that hovering over them for long enough shows me their names.
        Perhaps emulating the Firefox extension menu and showing a bold title,
        separator line, and then content would help?
        &lt;ul&gt;
            &lt;li&gt;&lt;/li&gt;
        &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;
        Interestingly, I also don&#39;t use the Firefox main menu bar at all, and
        whenever I have to open it, I am confused. (I didn&#39;t even know you could
        print from it!) This corroborates #1243&#39;s peeve about it for Chrome. For
        reference, I instead use the context-sensitive, more easily memorizable
        way to do things. Do I want to inspect the source code? Either I keybind
        to *I*nspect element, or right click on the area I want to inspect.
        *P*rint? Keybind or webapp-provided button. New tab? Press the &quot;+&quot;
        button that &quot;adds&quot; a new tab. The only items that I have remembered as
        idiomatic for the menu button across different apps is the about section
        and any settings.
    &lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>microtype</title>
    <link href="https://amuffin.is-a.dev/blog/microtype/" />
    <updated>2025-05-08T00:00:00Z</updated>
    <id>https://amuffin.is-a.dev/blog/microtype/</id>
    <content type="html">
&lt;p&gt;damn. pretty.&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;
        &lt;a href=&quot;https://mirrors.mit.edu/CTAN/macros/latex/contrib/microtype/microtype.pdf&quot;&gt;https://mirrors.mit.edu/CTAN/macros/latex/contrib/microtype/microtype.pdf&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
        coming to typst? is this what this means?
        &lt;a href=&quot;https://github.com/typst/typst/pull/6161&quot;&gt;https://github.com/typst/typst/pull/6161&lt;/a&gt;
    &lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>finite state machines</title>
    <link href="https://amuffin.is-a.dev/blog/finite-state-machines/" />
    <updated>2025-05-08T00:00:00Z</updated>
    <id>https://amuffin.is-a.dev/blog/finite-state-machines/</id>
    <content type="html">
&lt;p&gt;
    I&#39;ve been trying to learn how to make my pygame code not bad.
    &lt;a href=&quot;https://gameprogrammingpatterns.com/&quot;&gt;https://gameprogrammingpatterns.com/&lt;/a&gt;
    by Robert Nystrom is pretty nice.
&lt;/p&gt;

&lt;p&gt;
    I&#39;ve done some learning with that book, particularly being in the middle of
    a project using state machines. This is making me a bit annoyed with python.
&lt;/p&gt;

&lt;p&gt;
    I&#39;ve been wanting to learn Rust to a non-trival degree for a bit now
    (because new languages really rewire the brain). SO here are some other
    state machine stuff (in Rust) that I&#39;ve poked around and found:
&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;
        &lt;a href=&quot;https://crates.io/crates/moku&quot;&gt;https://crates.io/crates/moku&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
        &lt;a href=&quot;https://crates.io/crates/sm&quot;&gt;https://crates.io/crates/sm&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
        &lt;a href=&quot;https://crates.io/crates/rust-fsm&quot;&gt;https://crates.io/crates/rust-fsm&lt;/a&gt;
    &lt;/li&gt;
    &lt;li&gt;
        psych, python:
        &lt;a href=&quot;https://github.com/pytransitions/transitions&quot;&gt;https://github.com/pytransitions/transitions&lt;/a&gt;
    &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
    Along with that vibe, Rust and ocaml both have bindings to raylib, a library
    for coding games. So that&#39;s cool I guess.
&lt;/p&gt;

&lt;p&gt;eepy.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>digital garden created</title>
    <link href="https://amuffin.is-a.dev/blog/digital-gardened/" />
    <updated>2025-04-05T00:00:00Z</updated>
    <id>https://amuffin.is-a.dev/blog/digital-gardened/</id>
    <content type="html">
&lt;p&gt;It&#39;s here!&lt;/p&gt;

&lt;a href=&quot;https://amuffin.is-a.dev/garden/&quot;&gt;/garden/&lt;/a&gt;
</content>
  </entry>
  <entry>
    <title>ubuntu installing R</title>
    <link href="https://amuffin.is-a.dev/blog/ubuntu-r/" />
    <updated>2025-03-30T00:00:00Z</updated>
    <id>https://amuffin.is-a.dev/blog/ubuntu-r/</id>
    <content type="html">
&lt;p&gt;
    note to self: can install an up-to-date version of R from posit&#39;s cdn, of
    all places:
    &lt;a href=&quot;https://docs.posit.co/resources/install-r.html&quot;&gt;https://docs.posit.co/resources/install-r.html&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
    update: make sure you grab the correct versions! I use Ubuntu 22, and tried
    to install for Ubuntu 24, which gave a scary unfixable error message:
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Some packages could not be installed. This may mean that you have
requested an impossible situation or if you are using the unstable
distribution that some required packages have not yet been created
or been moved out of Incoming.
The following information may help to resolve the situation:

The following packages have unmet dependencies:
    r-4.4.3 : Depends: libcurl4t64 but it is not installable
            Depends: libglib2.0-0t64 but it is not installable
            Depends: libpng16-16t64 but it is not installable
            Depends: libreadline8t64 but it is not installable
            Depends: libtiff6 but it is not installable
            Depends: libxt6t64 but it is not installable
E: Unable to correct problems, you have held broken packages.&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>don&#39;t eat these, and digital gardens</title>
    <link href="https://amuffin.is-a.dev/blog/food-avoiding/" />
    <updated>2025-03-28T00:00:00Z</updated>
    <id>https://amuffin.is-a.dev/blog/food-avoiding/</id>
    <content type="html">
&lt;p&gt;
    I really need to keep a list of foods I should never buy again when I
    encounter them in the wrong scenarios. Tangentially, I should start making a
    digital garden to complement one-off blog posts. I&#39;ve heard &quot;digital garden&quot;
    described as a website style where you cultivate a garden of continually
    changing pages instead of releasing things post by post.
&lt;/p&gt;

&lt;p&gt;
    For example, this list of foods would make more sense as a garden plot
    instead of being in the blog section. Hmm, I&#39;ll make a new page or section
    for a garden soon I think.
&lt;/p&gt;

&lt;p&gt;Anyways, here&#39;s my current list to myself:&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;
        ramen: I swear, this is always so mid. It&#39;s alright, but like, it&#39;s
        always JUST noodles. I could make this at home. Don&#39;t waste your money.
    &lt;/li&gt;
    &lt;li&gt;
        double scoop of ice cream: TOO MUCH ICE CREAM! YEOWCH! This extends to
        all things that you think might be too much sweet. Ice cream floats are
        delish though.
    &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
    Tears Over Beers by Modern Baseball is heartachey. Most of midwest emo is
    nice in that way.
&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>nixos</title>
    <link href="https://amuffin.is-a.dev/blog/nixos/" />
    <updated>2025-03-27T00:00:00Z</updated>
    <id>https://amuffin.is-a.dev/blog/nixos/</id>
    <content type="html">
&lt;p&gt;
    I&#39;ve been taking looks at NixOS, and it&#39;s real cool. I&#39;ve been using the
    &lt;code&gt;uv&lt;/code&gt; python project/package manager recently, as well as being
    exposed to stuff like &lt;code&gt;npm&lt;/code&gt;. These have declarative environments
    (&lt;code&gt;pyproject.toml&lt;/code&gt; and &lt;code&gt;package.json&lt;/code&gt;) that makes
    coding in different places a treat.
&lt;/p&gt;

&lt;p&gt;
    In general, being able to set-and-forget a configuration for something is
    really really comforting. My current setup runs an Ubuntu LTS with so many
    mods that getting them all back after a system reset or new install or Bad
    Thing happening would take up all those hours and hours of googling again.
&lt;/p&gt;

&lt;p&gt;
    I&#39;d like to learn NixOS and solve this problem, but apparently it still has
    its compatibility problems of its own.
    &lt;code&gt;uv&lt;/code&gt; itself is terribly painful, it seems, and python isn&#39;t much
    better if at all. Anyways, here&#39;s a list of links I&#39;ve found on NixOS.
&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;
        &lt;a href=&quot;https://youtu.be/a67Sv4Mbxmc&quot;&gt;youtube video&lt;/a&gt; guide to NixOS,
        namedropped by
    &lt;/li&gt;
    &lt;li&gt;
        &lt;a href=&quot;https://youtu.be/CwfKlX3rA6E&quot;&gt;youtube video&lt;/a&gt; by No
        Boilerplate.
    &lt;/li&gt;
    &lt;li&gt;
        &lt;a href=&quot;https://www.reddit.com/r/NixOS/comments/1fv4hyg/anyone_using_python_uv_on_nixos/&quot;&gt;reddit thread&lt;/a&gt;
        about &lt;code&gt;uv&lt;/code&gt; on NixOS being terrible
    &lt;/li&gt;
    &lt;li&gt;
        &lt;a href=&quot;https://www.reddit.com/r/NixOS/comments/1fdxpam/help_request_python_development_specifically_with/&quot;&gt;reddit thread&lt;/a&gt;
        about &lt;code&gt;uv&lt;/code&gt; again, with link to an open &lt;code&gt;uv&lt;/code&gt; github
        issue.
    &lt;/li&gt;
    &lt;li&gt;
        &lt;a href=&quot;https://discourse.nixos.org/t/how-to-set-up-r-and-rstudio-on-nix-os/55182&quot;&gt;NixOS help forum thread&lt;/a&gt;
        about R and Rstudio on NixOS.
    &lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>math notation convention survey</title>
    <link href="https://amuffin.is-a.dev/blog/math-notation/" />
    <updated>2025-03-24T00:00:00Z</updated>
    <id>https://amuffin.is-a.dev/blog/math-notation/</id>
    <content type="html">
&lt;p&gt;
    &lt;a href=&quot;https://cims.nyu.edu/~tjl8195/survey/results.html#q1&quot;&gt;https://cims.nyu.edu/~tjl8195/survey/results.html#q1&lt;/a&gt;. That&#39;s pretty cool.
&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>video game lore</title>
    <link href="https://amuffin.is-a.dev/blog/video-game-lore/" />
    <updated>2025-03-22T00:00:00Z</updated>
    <id>https://amuffin.is-a.dev/blog/video-game-lore/</id>
    <content type="html">
&lt;p&gt;
    wait wait hold on &lt;a href=&quot;https://nier.fandom.com/&quot;&gt;nier automata&lt;/a&gt; is
    really cool lore :0. Here&#39;s a really nice summary of it in a reddit comment:
    &lt;a href=&quot;https://www.reddit.com/r/nier/comments/fr1nqv/comment/fltcpot/&quot;&gt;https://www.reddit.com/r/nier/comments/fr1nqv/comment/fltcpot/&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;occurred to me I might want to back up that reddit post. it&#39;ll be below.&lt;/p&gt;

&lt;p&gt;
    they also have a really neat (spoiler)
    &lt;span class=&quot;spoiler&quot;&gt;&quot;fuck it, soul linked plague&quot;&lt;/span&gt; gimmick that a
    really good webcomic,
    &lt;a href=&quot;https://sssscomic.com/&quot;&gt;stand still stay silent&lt;/a&gt;
    uses.
&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://soma.fandom.com/&quot;&gt;SOMA&lt;/a&gt; is also really cool :0&lt;/p&gt;

&lt;p&gt;the nier thing:&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;spoiler&quot;&gt; NieR Gestalt spoilers follow:&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;
    &lt;span class=&quot;spoiler&quot;&gt;
        Humans were going to go extinct due to a pandemic called White
        Chlorination Syndrome. In order to escape this, they developed a way of
        extracting the human soul from its physical form - called a Gestalt.
        They then developed Replicants that, through the Replicant System, would
        be 100% biologically identical to humans and continuously reborn by
        gathering data from the Gestalts. The plan was that after WCS had been
        eliminated, the Gestalts would reunite with their respective Replicants
        and become fully human again, thus saving the human race.&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;span class=&quot;spoiler&quot;&gt;
        Androids were developed before and alongside the Gestalt project to
        oversee the Replicants during the Gestalt project.&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;span class=&quot;spoiler&quot;&gt;
        Emil was originally a human child before the Gestalt Project went into
        full swing. He was part of a series of bio-weaponry experiments with the
        aim of fusing humans and magic to combat Legion (mindless thralls who
        had succumbed to WCS). The experiment resulted in his sister becoming
        the &quot;ultimate weapon&quot; and him gaining the ability of petrification in
        order to stop her after she went insane from losing her humanity. In
        NieR Gestalt, Emil is, speculatively, the last full &quot;human&quot; in existence
        even though the experiments had made him ageless and magic. Later he
        absorbs his sister&#39;s essence and becomes the Ultimate Weapon
        himself.&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;span class=&quot;spoiler&quot;&gt;
        In the end of NieR Gestalt, all of the Gestalts are doomed to perish
        from Relapse (going unstable) when Replicant NieR kills Gestalt NieR,
        because Gestalt NieR&#39;s Maso (Magic) was slowly &quot;repairing&quot; faltering
        Gestalts. With the Gestalts gone, the Replicants also begin to die out
        because the Replicant System doesnt work without Gestalts and Replicants
        cant reproduce normally. Humans go fully extinct.&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;span class=&quot;spoiler&quot;&gt;
        Years pass and the only intelligent beings on earth are Emil and
        Androids. Then aliens invade and Emil clones himself a bunch to create
        an army to fight them off. The Emil in NieR Automata is one of these
        clones, although the original Emil is supposedly still alive
        somewhere.&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;span class=&quot;spoiler&quot;&gt;
        Project YorHa was created by androids who had ultimately lost all
        purpose in life after humanity was doomed.&lt;/span&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;span class=&quot;spoiler&quot;&gt;
        The Machines were created by the aliens to fight the Androids and the
        Emils. Sapience was incepted into Machines (then called Machine
        Lifeforms) by a very old military robot nicknamed &quot;Beepy&quot; who developed
        sentience through unique social intereaction followed by an extremely
        long period of time in which his logic circuits could develop and
        process complex variable combinations. He then merged that processing
        power with every machine in an abandoned Military Compound, thus
        creating the first Machine Lifeform. Beepy then sent out a signal to all
        the mindless fighting machines, demanding that they should simply
        &quot;live.&quot; Eventually this got through to them and they began developing
        their own complex logic and came to know sentience and &quot;free will&quot;
    &lt;/span&gt;
&lt;/p&gt;
</content>
  </entry>
</feed>